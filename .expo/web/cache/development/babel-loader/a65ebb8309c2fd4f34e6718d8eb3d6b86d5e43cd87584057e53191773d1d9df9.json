{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { USER_STATE_CHANGE, USER_POSTS_STATE_CHANGE, USERS_POSTS_STATE_CHANGE, USER_FOLLOWS_STATE_CHANGE, USERS_DATA_STATE_CHANGE, CLEAR_DATA } from \"../constants/index.js\";\nexport function clearData() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_DATA\n    });\n  };\n}\nexport function fetchUser() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        dispatch({\n          type: USER_STATE_CHANGE,\n          currentUser: snapshot.data()\n        });\n      } else {\n        console.log(\"User doesn't exist\");\n      }\n    });\n  };\n}\nexport function fetchUserPosts() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"posts\").doc(firebase.auth().currentUser.uid).collection(\"userPosts\").orderBy(\"created_at\", \"desc\").get().then(function (snapshot) {\n      var posts = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      console.log(posts);\n      dispatch({\n        type: USER_POSTS_STATE_CHANGE,\n        posts: posts\n      });\n    });\n  };\n}\nexport function fetchUserFollows() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"follows\").doc(firebase.auth().currentUser.uid).collection(\"userFollows\").onSnapshot(function (snapshot) {\n      var follows = snapshot.docs.map(function (doc) {\n        var id = doc.id;\n        return id;\n      });\n      console.log(follows);\n      dispatch({\n        type: USER_FOLLOWS_STATE_CHANGE,\n        follows: follows\n      });\n      for (var i = 0; i < follows.length; i++) {\n        dispatch(fetchUsersData(follows[i], true));\n      }\n    });\n  };\n}\nexport function fetchUsersData(uid, getPosts) {\n  return function (dispatch, getState) {\n    var found = getState().usersState.users.some(function (el) {\n      return el.uid === uid;\n    });\n    if (!found) {\n      firebase.firestore().collection(\"users\").doc(uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          var user = snapshot.data();\n          user.uid = snapshot.id;\n          dispatch({\n            type: USERS_DATA_STATE_CHANGE,\n            user: user\n          });\n          dispatch(fetchUsersFollowsPosts(user.uid));\n        } else {\n          console.log(\"User doesn't exist\");\n        }\n      });\n      if (getPosts) {\n        dispatch(fetchUsersFollowsPosts(uid));\n      }\n    }\n  };\n}\nexport function fetchUsersFollowsPosts(uid) {\n  return function (dispatch, getState) {\n    firebase.firestore().collection(\"posts\").doc(uid).collection(\"userPosts\").orderBy(\"created_at\", \"desc\").get().then(function (snapshot) {\n      var uid = snapshot.docs[0].ref.path.split(\"/\")[1];\n      console.log(uid);\n      var user = getState().usersState.users.find(function (el) {\n        return el.uid === uid;\n      });\n      var posts = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread(_objectSpread({\n          id: id\n        }, data), {}, {\n          user: user\n        });\n      });\n      for (var i = 0; i < posts.length; i++) {\n        dispatch(fetchUsersFollowsLikes(uid, posts[i].id));\n      }\n      dispatch({\n        type: USERS_POSTS_STATE_CHANGE,\n        posts: posts,\n        uid: uid\n      });\n    });\n  };\n}\nexport function fetchUsersFollowsLikes(uid, postId) {\n  return function (dispatch, getState) {\n    firebase.firestore().collection(\"posts\").doc(uid).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).onSnapshot(function (snapshot) {\n      console.log(snapshot);\n      var postId = snapshot.docs[0].ref.path.split(\"/\")[1];\n      dispatch({\n        type: USERS_POSTS_STATE_CHANGE,\n        posts: posts,\n        uid: uid\n      });\n      console.log(getState());\n    });\n  };\n}","map":{"version":3,"names":["firebase","USER_STATE_CHANGE","USER_POSTS_STATE_CHANGE","USERS_POSTS_STATE_CHANGE","USER_FOLLOWS_STATE_CHANGE","USERS_DATA_STATE_CHANGE","CLEAR_DATA","clearData","dispatch","type","fetchUser","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","data","console","log","fetchUserPosts","orderBy","posts","docs","map","id","_objectSpread","fetchUserFollows","onSnapshot","follows","i","length","fetchUsersData","getPosts","getState","found","usersState","users","some","el","user","fetchUsersFollowsPosts","ref","path","split","find","fetchUsersFollowsLikes","postId"],"sources":["D:/prog/TFT/extrafy/redux/actions/index.js"],"sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  USER_STATE_CHANGE,\r\n  USER_POSTS_STATE_CHANGE,\r\n  USERS_POSTS_STATE_CHANGE,\r\n  USER_FOLLOWS_STATE_CHANGE,\r\n  USERS_DATA_STATE_CHANGE,\r\n  CLEAR_DATA,\r\n} from \"../constants/index.js\";\r\n\r\nexport function clearData() {\r\n  return (dispatch) => {\r\n    dispatch({ type: CLEAR_DATA });\r\n  };\r\n}\r\n\r\nexport function fetchUser() {\r\n  return (dispatch) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.exists) {\r\n          dispatch({ type: USER_STATE_CHANGE, currentUser: snapshot.data() });\r\n        } else {\r\n          console.log(\"User doesn't exist\");\r\n        }\r\n      });\r\n  };\r\n}\r\nexport function fetchUserPosts() {\r\n  return (dispatch) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"userPosts\")\r\n      .orderBy(\"created_at\", \"desc\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        let posts = snapshot.docs.map((doc) => {\r\n          const data = doc.data();\r\n          const id = doc.id;\r\n          return { id, ...data };\r\n        });\r\n        console.log(posts);\r\n        dispatch({ type: USER_POSTS_STATE_CHANGE, posts });\r\n      });\r\n  };\r\n}\r\nexport function fetchUserFollows() {\r\n  return (dispatch) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"follows\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"userFollows\")\r\n      .onSnapshot((snapshot) => {\r\n        let follows = snapshot.docs.map((doc) => {\r\n          const id = doc.id;\r\n          return id;\r\n        });\r\n        console.log(follows);\r\n        dispatch({ type: USER_FOLLOWS_STATE_CHANGE, follows });\r\n        for (let i = 0; i < follows.length; i++) {\r\n          dispatch(fetchUsersData(follows[i], true));\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchUsersData(uid, getPosts) {\r\n  return (dispatch, getState) => {\r\n    const found = getState().usersState.users.some((el) => el.uid === uid);\r\n\r\n    if (!found) {\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(uid)\r\n        .get()\r\n        .then((snapshot) => {\r\n          if (snapshot.exists) {\r\n            let user = snapshot.data();\r\n            user.uid = snapshot.id;\r\n\r\n            dispatch({ type: USERS_DATA_STATE_CHANGE, user });\r\n            dispatch(fetchUsersFollowsPosts(user.uid));\r\n          } else {\r\n            console.log(\"User doesn't exist\");\r\n          }\r\n        });\r\n      if (getPosts) {\r\n        dispatch(fetchUsersFollowsPosts(uid));\r\n      }\r\n    }\r\n  };\r\n}\r\nexport function fetchUsersFollowsPosts(uid) {\r\n  return (dispatch, getState) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .doc(uid)\r\n      .collection(\"userPosts\")\r\n      .orderBy(\"created_at\", \"desc\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const uid = snapshot.docs[0].ref.path.split(\"/\")[1];\r\n        console.log(uid);\r\n        const user = getState().usersState.users.find((el) => el.uid === uid);\r\n\r\n        let posts = snapshot.docs.map((doc) => {\r\n          const data = doc.data();\r\n          const id = doc.id;\r\n          return { id, ...data, user };\r\n        });\r\n        for (let i = 0; i < posts.length; i++) {\r\n          dispatch(fetchUsersFollowsLikes(uid, posts[i].id));\r\n        }\r\n        dispatch({ type: USERS_POSTS_STATE_CHANGE, posts, uid });\r\n      });\r\n  };\r\n}\r\nexport function fetchUsersFollowsLikes(uid, postId) {\r\n  return (dispatch, getState) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .doc(uid)\r\n      .collection(\"userPosts\")\r\n      .doc(postId)\r\n      .collection(\"likes\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .onSnapshot((snapshot) => {\r\n        console.log(snapshot);\r\n        const postId = snapshot.docs[0].ref.path.split(\"/\")[1];\r\n        dispatch({ type: USERS_POSTS_STATE_CHANGE, posts, uid });\r\n        console.log(getState());\r\n      });\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}