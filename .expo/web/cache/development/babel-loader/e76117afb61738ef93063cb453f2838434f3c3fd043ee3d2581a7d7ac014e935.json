{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"theme\"],\n  _excluded2 = [\"elevation\", \"children\", \"theme\", \"style\", \"testID\"],\n  _excluded3 = [\"position\", \"alignSelf\", \"top\", \"left\", \"right\", \"bottom\", \"start\", \"end\", \"flex\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../core/theming\";\nimport overlay, { isAnimatedValue } from \"../styles/overlay\";\nimport shadow from \"../styles/shadow\";\nimport { forwardRef } from \"../utils/forwardRef\";\nvar MD2Surface = forwardRef(function (_ref, ref) {\n  var style = _ref.style,\n    overrideTheme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _ref3 = StyleSheet.flatten(style) || {},\n    _ref3$elevation = _ref3.elevation,\n    elevation = _ref3$elevation === void 0 ? 4 : _ref3$elevation;\n  var _useInternalTheme = useInternalTheme(overrideTheme),\n    isDarkTheme = _useInternalTheme.dark,\n    mode = _useInternalTheme.mode,\n    colors = _useInternalTheme.colors;\n  return React.createElement(Animated.View, _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      backgroundColor: isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface\n    }, elevation ? shadow(elevation) : null, style]\n  }));\n});\nvar Surface = forwardRef(function (_ref2, ref) {\n  var _ref2$elevation = _ref2.elevation,\n    elevation = _ref2$elevation === void 0 ? 1 : _ref2$elevation,\n    children = _ref2.children,\n    overridenTheme = _ref2.theme,\n    style = _ref2.style,\n    _ref2$testID = _ref2.testID,\n    testID = _ref2$testID === void 0 ? 'surface' : _ref2$testID,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  var theme = useInternalTheme(overridenTheme);\n  if (!theme.isV3) return React.createElement(MD2Surface, _extends({}, props, {\n    theme: theme,\n    style: style,\n    ref: ref\n  }), children);\n  var colors = theme.colors;\n  var inputRange = [0, 1, 2, 3, 4, 5];\n  var backgroundColor = function () {\n    var _colors$elevation2;\n    if (isAnimatedValue(elevation)) {\n      return elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (elevation) {\n          var _colors$elevation;\n          return (_colors$elevation = colors.elevation) === null || _colors$elevation === void 0 ? void 0 : _colors$elevation[\"level\" + elevation];\n        })\n      });\n    }\n    return (_colors$elevation2 = colors.elevation) === null || _colors$elevation2 === void 0 ? void 0 : _colors$elevation2[\"level\" + elevation];\n  }();\n  if (Platform.OS === 'web') {\n    return React.createElement(Animated.View, _extends({}, props, {\n      ref: ref,\n      testID: testID,\n      style: [{\n        backgroundColor: backgroundColor\n      }, elevation ? shadow(elevation, theme.isV3) : null, style]\n    }), children);\n  }\n  if (Platform.OS === 'android') {\n    var elevationLevel = [0, 3, 6, 9, 12, 15];\n    var getElevationAndroid = function getElevationAndroid() {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: elevationLevel\n        });\n      }\n      return elevationLevel[elevation];\n    };\n    var _ref4 = StyleSheet.flatten(style) || {},\n      margin = _ref4.margin,\n      padding = _ref4.padding,\n      transform = _ref4.transform,\n      borderRadius = _ref4.borderRadius;\n    var outerLayerStyles = {\n      margin: margin,\n      padding: padding,\n      transform: transform,\n      borderRadius: borderRadius\n    };\n    var _sharedStyle = [{\n      backgroundColor: backgroundColor\n    }, style];\n    return React.createElement(Animated.View, _extends({}, props, {\n      testID: testID,\n      ref: ref,\n      style: [{\n        backgroundColor: backgroundColor,\n        transform: transform\n      }, outerLayerStyles, _sharedStyle, {\n        elevation: getElevationAndroid()\n      }]\n    }), children);\n  }\n  var iOSShadowOutputRanges = [{\n    shadowOpacity: 0.15,\n    height: [0, 1, 2, 4, 6, 8],\n    shadowRadius: [0, 3, 6, 8, 10, 12]\n  }, {\n    shadowOpacity: 0.3,\n    height: [0, 1, 1, 1, 2, 4],\n    shadowRadius: [0, 1, 2, 3, 3, 4]\n  }];\n  var shadowColor = '#000';\n  var _ref5 = StyleSheet.flatten(style) || {},\n    position = _ref5.position,\n    alignSelf = _ref5.alignSelf,\n    top = _ref5.top,\n    left = _ref5.left,\n    right = _ref5.right,\n    bottom = _ref5.bottom,\n    start = _ref5.start,\n    end = _ref5.end,\n    flex = _ref5.flex,\n    restStyle = _objectWithoutProperties(_ref5, _excluded3);\n  var absoluteStyles = {\n    position: position,\n    alignSelf: alignSelf,\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left,\n    start: start,\n    end: end\n  };\n  var sharedStyle = [{\n    backgroundColor: backgroundColor,\n    flex: flex\n  }, restStyle];\n  var innerLayerViewStyles = [{\n    flex: flex\n  }];\n  var outerLayerViewStyles = [absoluteStyles, innerLayerViewStyles];\n  if (isAnimatedValue(elevation)) {\n    var _inputRange = [0, 1, 2, 3, 4, 5];\n    var getStyleForAnimatedShadowLayer = function getStyleForAnimatedShadowLayer(layer) {\n      return {\n        shadowColor: shadowColor,\n        shadowOpacity: elevation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n          extrapolate: 'clamp'\n        }),\n        shadowOffset: {\n          width: 0,\n          height: elevation.interpolate({\n            inputRange: _inputRange,\n            outputRange: iOSShadowOutputRanges[layer].height\n          })\n        },\n        shadowRadius: elevation.interpolate({\n          inputRange: _inputRange,\n          outputRange: iOSShadowOutputRanges[layer].shadowRadius\n        })\n      };\n    };\n    return React.createElement(Animated.View, {\n      style: [getStyleForAnimatedShadowLayer(0), outerLayerViewStyles],\n      testID: testID + \"-outer-layer\"\n    }, React.createElement(Animated.View, {\n      style: [getStyleForAnimatedShadowLayer(1), innerLayerViewStyles],\n      testID: testID + \"-inner-layer\"\n    }, React.createElement(Animated.View, _extends({}, props, {\n      testID: testID,\n      style: sharedStyle\n    }), children)));\n  }\n  var getStyleForShadowLayer = function getStyleForShadowLayer(layer) {\n    return {\n      shadowColor: shadowColor,\n      shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n      shadowOffset: {\n        width: 0,\n        height: iOSShadowOutputRanges[layer].height[elevation]\n      },\n      shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation]\n    };\n  };\n  return React.createElement(Animated.View, {\n    ref: ref,\n    style: [getStyleForShadowLayer(0), outerLayerViewStyles],\n    testID: testID + \"-outer-layer\"\n  }, React.createElement(Animated.View, {\n    style: [getStyleForShadowLayer(1), innerLayerViewStyles],\n    testID: testID + \"-inner-layer\"\n  }, React.createElement(Animated.View, _extends({}, props, {\n    testID: testID,\n    style: sharedStyle\n  }), children)));\n});\nexport default Surface;","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","useInternalTheme","overlay","isAnimatedValue","shadow","forwardRef","MD2Surface","_ref","ref","style","overrideTheme","theme","rest","_objectWithoutProperties","_excluded","_ref3","flatten","_ref3$elevation","elevation","_useInternalTheme","isDarkTheme","dark","mode","colors","createElement","View","_extends","backgroundColor","surface","Surface","_ref2","_ref2$elevation","children","overridenTheme","_ref2$testID","testID","props","_excluded2","isV3","inputRange","_colors$elevation2","interpolate","outputRange","map","_colors$elevation","OS","elevationLevel","getElevationAndroid","_ref4","margin","padding","transform","borderRadius","outerLayerStyles","sharedStyle","iOSShadowOutputRanges","shadowOpacity","height","shadowRadius","shadowColor","_ref5","position","alignSelf","top","left","right","bottom","start","end","flex","restStyle","_excluded3","absoluteStyles","innerLayerViewStyles","outerLayerViewStyles","getStyleForAnimatedShadowLayer","layer","extrapolate","shadowOffset","width","getStyleForShadowLayer"],"sources":["D:\\prog\\TFT\\extrafy\\node_modules\\react-native-paper\\src\\components\\Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport shadow from '../styles/shadow';\nimport type { ThemeProp, MD3Elevation } from '../types';\nimport { forwardRef } from '../utils/forwardRef';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\nconst MD2Surface = forwardRef<View, Props>(\n  ({ style, theme: overrideTheme, ...rest }: Omit<Props, 'elevation'>, ref) => {\n    const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n    const { dark: isDarkTheme, mode, colors } = useInternalTheme(overrideTheme);\n\n    return (\n      <Animated.View\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors?.surface)\n                : colors?.surface,\n          },\n          elevation ? shadow(elevation) : null,\n          style,\n        ]}\n      />\n    );\n  }\n);\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark InternalTheme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-android.png\" />\n *     <figcaption>Surface on Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-ios.png\" />\n *     <figcaption>Surface on iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = forwardRef<View, Props>(\n  (\n    {\n      elevation = 1,\n      children,\n      theme: overridenTheme,\n      style,\n      testID = 'surface',\n      ...props\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(overridenTheme);\n\n    if (!theme.isV3)\n      return (\n        <MD2Surface {...props} theme={theme} style={style} ref={ref}>\n          {children}\n        </MD2Surface>\n      );\n\n    const { colors } = theme;\n\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const backgroundColor = (() => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: inputRange.map((elevation) => {\n            return colors.elevation?.[`level${elevation as MD3Elevation}`];\n          }),\n        });\n      }\n\n      return colors.elevation?.[`level${elevation}`];\n    })();\n\n    if (Platform.OS === 'web') {\n      return (\n        <Animated.View\n          {...props}\n          ref={ref}\n          testID={testID}\n          style={[\n            { backgroundColor },\n            elevation ? shadow(elevation, theme.isV3) : null,\n            style,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n      const getElevationAndroid = () => {\n        if (isAnimatedValue(elevation)) {\n          return elevation.interpolate({\n            inputRange,\n            outputRange: elevationLevel,\n          });\n        }\n\n        return elevationLevel[elevation];\n      };\n\n      const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n        style\n      ) || {}) as ViewStyle;\n\n      const outerLayerStyles = { margin, padding, transform, borderRadius };\n      const sharedStyle = [{ backgroundColor }, style];\n\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          ref={ref}\n          style={[\n            {\n              backgroundColor,\n              transform,\n            },\n            outerLayerStyles,\n            sharedStyle,\n            {\n              elevation: getElevationAndroid(),\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    const iOSShadowOutputRanges = [\n      {\n        shadowOpacity: 0.15,\n        height: [0, 1, 2, 4, 6, 8],\n        shadowRadius: [0, 3, 6, 8, 10, 12],\n      },\n      {\n        shadowOpacity: 0.3,\n        height: [0, 1, 1, 1, 2, 4],\n        shadowRadius: [0, 1, 2, 3, 3, 4],\n      },\n    ];\n\n    const shadowColor = '#000';\n\n    const {\n      position,\n      alignSelf,\n      top,\n      left,\n      right,\n      bottom,\n      start,\n      end,\n      flex,\n      ...restStyle\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const absoluteStyles = {\n      position,\n      alignSelf,\n      top,\n      right,\n      bottom,\n      left,\n      start,\n      end,\n    };\n\n    const sharedStyle = [{ backgroundColor, flex }, restStyle];\n\n    const innerLayerViewStyles = [{ flex }];\n\n    const outerLayerViewStyles = [absoluteStyles, innerLayerViewStyles];\n\n    if (isAnimatedValue(elevation)) {\n      const inputRange = [0, 1, 2, 3, 4, 5];\n\n      const getStyleForAnimatedShadowLayer = (layer: 0 | 1) => {\n        return {\n          shadowColor,\n          shadowOpacity: elevation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n            extrapolate: 'clamp',\n          }),\n          shadowOffset: {\n            width: 0,\n            height: elevation.interpolate({\n              inputRange,\n              outputRange: iOSShadowOutputRanges[layer].height,\n            }),\n          },\n          shadowRadius: elevation.interpolate({\n            inputRange,\n            outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n          }),\n        };\n      };\n\n      return (\n        <Animated.View\n          style={[getStyleForAnimatedShadowLayer(0), outerLayerViewStyles]}\n          testID={`${testID}-outer-layer`}\n        >\n          <Animated.View\n            style={[getStyleForAnimatedShadowLayer(1), innerLayerViewStyles]}\n            testID={`${testID}-inner-layer`}\n          >\n            <Animated.View {...props} testID={testID} style={sharedStyle}>\n              {children}\n            </Animated.View>\n          </Animated.View>\n        </Animated.View>\n      );\n    }\n\n    const getStyleForShadowLayer = (layer: 0 | 1) => {\n      return {\n        shadowColor,\n        shadowOpacity: elevation\n          ? iOSShadowOutputRanges[layer].shadowOpacity\n          : 0,\n        shadowOffset: {\n          width: 0,\n          height: iOSShadowOutputRanges[layer].height[elevation],\n        },\n        shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n      };\n    };\n\n    return (\n      <Animated.View\n        ref={ref}\n        style={[getStyleForShadowLayer(0), outerLayerViewStyles]}\n        testID={`${testID}-outer-layer`}\n      >\n        <Animated.View\n          style={[getStyleForShadowLayer(1), innerLayerViewStyles]}\n          testID={`${testID}-inner-layer`}\n        >\n          <Animated.View {...props} testID={testID} style={sharedStyle}>\n            {children}\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n);\n\nexport default Surface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}