{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState } from \"react\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/firestore\";\nimport \"firebase/compat/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Save = function Save(props) {\n  var childPath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    caption = _useState2[0],\n    setCaption = _useState2[1];\n  var uploadImg = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var uri = props.route.params.image;\n      var res = yield fetch(uri);\n      var blob = yield res.blob();\n      var task = firebase.storage().ref().child(childPath).put(blob);\n      var taskProgress = function taskProgress(snapshot) {\n        console.log(\"transferred: \" + (snapshot.bytesTransferred / snapshot.totalBytes * 100).toFixed() + \" %\");\n      };\n      var taskCompleted = function taskCompleted() {\n        task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n          savePostData(snapshot);\n          console.log(snapshot);\n        });\n      };\n      var taskError = function taskError(error) {\n        console.log(error);\n        console.log(\"huy\");\n      };\n      task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n    });\n    return function uploadImg() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection(\"posts\").doc(firebase.auth().currentUser.uid).collection(\"userPosts\").add({\n      downloadURL: downloadURL,\n      caption: caption,\n      created_at: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      props.navigation.popToTop();\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Image, {\n      style: {\n        flex: 1\n      },\n      source: {\n        uri: props.route.params.image\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Caption goes here...\",\n      onChangeText: function onChangeText(caption) {\n        return setCaption(caption);\n      }\n    }), _jsx(Button, {\n      title: \"Save post\",\n      onPress: function onPress() {\n        return uploadImg();\n      }\n    })]\n  });\n};\nexport default Save;","map":{"version":3,"names":["React","useState","firebase","jsx","_jsx","jsxs","_jsxs","Save","props","childPath","auth","currentUser","uid","Math","random","toString","_useState","_useState2","_slicedToArray","caption","setCaption","uploadImg","_ref","_asyncToGenerator","uri","route","params","image","res","fetch","blob","task","storage","ref","child","put","taskProgress","snapshot","console","log","bytesTransferred","totalBytes","toFixed","taskCompleted","getDownloadURL","then","savePostData","taskError","error","on","apply","arguments","downloadURL","firestore","collection","doc","add","created_at","FieldValue","serverTimestamp","navigation","popToTop","View","style","flex","children","Image","source","TextInput","placeholder","onChangeText","Button","title","onPress"],"sources":["D:/prog/TFT/extrafy/components/main/Save.js"],"sourcesContent":["import { View, Text, Image, TextInput, Button } from \"react-native\";\r\nimport React, { useState } from \"react\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/compat/auth\";\r\n\r\nconst Save = (props) => {\r\n  const childPath = `post/${\r\n    firebase.auth().currentUser.uid\r\n  }/${Math.random().toString(36)}`;\r\n  const [caption, setCaption] = useState(\"\");\r\n  const uploadImg = async () => {\r\n    const uri = props.route.params.image;\r\n    const res = await fetch(uri);\r\n    const blob = await res.blob();\r\n    const task = firebase.storage().ref().child(childPath).put(blob);\r\n\r\n    const taskProgress = (snapshot) => {\r\n      console.log(\r\n        `transferred: ${(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) *\r\n          100\r\n        ).toFixed()} %`\r\n      );\r\n    };\r\n\r\n    const taskCompleted = () => {\r\n      task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n        savePostData(snapshot);\r\n        console.log(snapshot);\r\n      });\r\n    };\r\n    const taskError = (error) => {\r\n      console.log(error);\r\n      console.log(\"huy\");\r\n    };\r\n\r\n    task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\r\n  };\r\n\r\n  const savePostData = (downloadURL) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"posts\")\r\n      .doc(firebase.auth().currentUser.uid)\r\n      .collection(\"userPosts\")\r\n      .add({\r\n        downloadURL,\r\n        caption,\r\n        created_at: firebase.firestore.FieldValue.serverTimestamp(),\r\n      })\r\n      .then(() => {\r\n        props.navigation.popToTop();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Image style={{ flex: 1 }} source={{ uri: props.route.params.image }} />\r\n      <TextInput\r\n        placeholder=\"Caption goes here...\"\r\n        onChangeText={(caption) => setCaption(caption)}\r\n      />\r\n      <Button title=\"Save post\" onPress={() => uploadImg()} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Save;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}